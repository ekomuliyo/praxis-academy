/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package FunctionalProgramming;

public class App {

    public static void main(String[] args) {
        IProducer<String> producer = new IProducer<String>(){

			@Override
			public String produce() {
				return "halo ini pertama";
			}
        };

        IConfigurator<String> configurator = new IConfigurator<String>() {

			@Override
			public void configure(String t) {
                
                t = "anu om ini kedua";
                System.out.println(t);
			}
        };

        IFactory<String> factory =  createFactory(producer, configurator);
        System.out.println(factory.create());
    }

    public static <T> IFactory<T> createFactory(IProducer<T> producer, IConfigurator<T> configurator) {
        return () -> {
            T instance = producer.produce();
            System.out.println("Halo juga");
            configurator.configure(instance);
            return instance;
        };
    }
}

interface IFactory<T>{
    T create();
}

interface IProducer<T>{
    T produce();
}

interface IConfigurator<T>{
    void configure(T t);
}
